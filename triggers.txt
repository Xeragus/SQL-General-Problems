A) 
DEPARTMENT(DPID, NAME, LOCATION)
EMPLOYEE(EMPID, NAME, SURNAME, SALARY)

B) DEFINE A TRIGGER TR_UPDATE_MANAGER THAT WILL FIRE BEFORE THE CHANGING
OF THE BOSS IN A DEPARTMENT, AND IT SHOULD SET THE ID OF THE NEW BOSS AS
THE NEW MENAGER OF ALL EMPLOYEES IN THAT DEPARTMENT

CREATE TRIGGER TR_UPDATE_MANAGER
BEFORE UPDATE OF BOSS ON DEPARTMENT
FOR EACH ROW
WHEN NEW.BOSS IS NOT NULL
BEGIN
	UPDATE EMPLOYEE
	SET EMPLOYEE.MANAGER = NEW.BOSS
	WHERE EMPLOYEE.DPTID = OLD.DPTID
END

C) DEFINE A TRIGGER THAT WILL LOOK AFTER THE ATTRIBUTE 'LOCATION' IN THE
TABLE DEPARTMENT, AND IT SHOULD CHECK IF THE NEW VALUE CONTAINS ONLY UPPERCASE LETTERS

CREATE TRIGGER TR_CAPS_LOCATION
BEFORE UPDATE OF LOCATION ON DEPARTMENT
FOR EACH ROW
WHEN NEW.LOCATION IS NOT NULL
BEGIN
	SET NEW.LOCATION = UPPER(NEW.LOCATION)
END

D) ADD AN ATTRIBUTE IN THE TABLE DEPARTMENT WITH THE NAME 'TOTALSALARY' IN WHICH
THE TOTAL SALARY OF ALL EMPLOYEES IN THAT DEPARTMENT WILL BE STORED. WRITE THE
TRIGGERS FOR THE FOLLOWING EVENTS AND MAKE THEM TO KEEP THE CORRECT VALUE IN 'TOTALSALARY'
D.1) INSERTING NEW ROWS FOR EMPLOYEES

CREATE TRIGGER TR_TOTAL1
AFTER INSERT ON EMPLOYEE
FOR EACH ROW
WHEN NEW.DPTID IS NOT NULL
BEGIN
	UPDATE DEPARTMENT
	SET TOTALSALARY = TOTALSALARY + NEW.SALARY
	WHERE DPTID = NEW.DPTID
END

D.2) CHANGE THE SALARY OF THE EXISTING EMPLOYEES

CREATE TRIGGER TR_TOTAL2
AFTER UPDATE OF SALARY ON EMPLOYEE
FOR EACH ROW
WHEN NEW.DPTID=OLD.DPTID
BEGIN
	UPDATE DEPARTMENT
	SET TOTALSALARY = TOTALSALARY + NEW.SALARY - OLD.SALARY
	WHERE DPTID=NEW.DPTID
END


D.3) REALOCATION OF EXISTING EMPLOYEES FROM ONE DEPARTMENT TO ANOTHER

CREATE TRIGGER TR_TOTAL3
AFTER UPDATE OF DPTID ON EMPLOYEE
FOR EACH ROW
WHEN NEW.DPTID IS NOT NULL
BEGIN
	UPDATE DEPARTMENT
	SET TOTALSALARY = TOTALSALARY + NEW.SALARY
	WHERE DPTID=NEW.DPTID
	UPDATE DEPARTMENT
	SET TOTALSALARY = TOTALSALARY - OLD.SALARY
	WHERE DPTID=OLD.DPTID
END

D.4) DELETING ROWS FOR EMPLOYEES

CREATE TRIGGER TR_TOTAL4
AFTER DELETE ON EMPLOYEE
FOR EACH ROW
BEGIN 
	UPDATE DEPARTMENT
	SET TOTALSALARY = TOTALSALARY - OLD.SALARY
	WHERE DPTID = OLD.DPTID
END

D.5) WRITE A TRIGGER THAT WILL KEEP THE REFERENTIAL INTEGRITY OF THE DATABASE
AND WILL DO A CASCADE DELETING OF ALL INFORMATION CONNECTED TO THE DEPARTMENTS
THAT ARE DELETED FROM THE DATABASE

CREATE TRIGGER TR_CASCADE_DELETE
AFTER DELETE ON DEPARTMENT
FOR EACH ROW
BEGIN
	DELETE FROM EMPLOYEE
	WHERE DPTID=OLD.DPTID
END